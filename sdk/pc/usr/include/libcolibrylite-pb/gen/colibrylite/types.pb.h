// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: colibrylite/types.proto

#ifndef PROTOBUF_INCLUDED_colibrylite_2ftypes_2eproto
#define PROTOBUF_INCLUDED_colibrylite_2ftypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "colibrylite/horizontal_position_target_kind.pb.h"
#include "colibrylite/horizontal_velocity_target_kind.pb.h"
#include "colibrylite/vertical_position_target_kind.pb.h"
#include "colibrylite/vertical_velocity_target_kind.pb.h"
#include "colibrylite/yaw_position_target_kind.pb.h"
#include "colibrylite/yaw_velocity_target_kind.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_colibrylite_2ftypes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_colibrylite_2ftypes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_colibrylite_2ftypes_2eproto();
namespace ColibryLite {
namespace Messages {
class HorizontalPositionTarget;
class HorizontalPositionTargetDefaultTypeInternal;
extern HorizontalPositionTargetDefaultTypeInternal _HorizontalPositionTarget_default_instance_;
class HorizontalTrajectoryPoint;
class HorizontalTrajectoryPointDefaultTypeInternal;
extern HorizontalTrajectoryPointDefaultTypeInternal _HorizontalTrajectoryPoint_default_instance_;
class HorizontalVelocityTarget;
class HorizontalVelocityTargetDefaultTypeInternal;
extern HorizontalVelocityTargetDefaultTypeInternal _HorizontalVelocityTarget_default_instance_;
class HorizontalVelocityTrajectory;
class HorizontalVelocityTrajectoryDefaultTypeInternal;
extern HorizontalVelocityTrajectoryDefaultTypeInternal _HorizontalVelocityTrajectory_default_instance_;
class TiltTrajectoryPoint;
class TiltTrajectoryPointDefaultTypeInternal;
extern TiltTrajectoryPointDefaultTypeInternal _TiltTrajectoryPoint_default_instance_;
class TrajectoryPoint;
class TrajectoryPointDefaultTypeInternal;
extern TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;
class VelocityTrajectory;
class VelocityTrajectoryDefaultTypeInternal;
extern VelocityTrajectoryDefaultTypeInternal _VelocityTrajectory_default_instance_;
class VerticalPositionTarget;
class VerticalPositionTargetDefaultTypeInternal;
extern VerticalPositionTargetDefaultTypeInternal _VerticalPositionTarget_default_instance_;
class VerticalThrustRamp;
class VerticalThrustRampDefaultTypeInternal;
extern VerticalThrustRampDefaultTypeInternal _VerticalThrustRamp_default_instance_;
class VerticalVelocityTarget;
class VerticalVelocityTargetDefaultTypeInternal;
extern VerticalVelocityTargetDefaultTypeInternal _VerticalVelocityTarget_default_instance_;
class YawPositionTarget;
class YawPositionTargetDefaultTypeInternal;
extern YawPositionTargetDefaultTypeInternal _YawPositionTarget_default_instance_;
class YawVelocityTarget;
class YawVelocityTargetDefaultTypeInternal;
extern YawVelocityTargetDefaultTypeInternal _YawVelocityTarget_default_instance_;
}  // namespace Messages
}  // namespace ColibryLite
namespace google {
namespace protobuf {
template<> ::ColibryLite::Messages::HorizontalPositionTarget* Arena::CreateMaybeMessage<::ColibryLite::Messages::HorizontalPositionTarget>(Arena*);
template<> ::ColibryLite::Messages::HorizontalTrajectoryPoint* Arena::CreateMaybeMessage<::ColibryLite::Messages::HorizontalTrajectoryPoint>(Arena*);
template<> ::ColibryLite::Messages::HorizontalVelocityTarget* Arena::CreateMaybeMessage<::ColibryLite::Messages::HorizontalVelocityTarget>(Arena*);
template<> ::ColibryLite::Messages::HorizontalVelocityTrajectory* Arena::CreateMaybeMessage<::ColibryLite::Messages::HorizontalVelocityTrajectory>(Arena*);
template<> ::ColibryLite::Messages::TiltTrajectoryPoint* Arena::CreateMaybeMessage<::ColibryLite::Messages::TiltTrajectoryPoint>(Arena*);
template<> ::ColibryLite::Messages::TrajectoryPoint* Arena::CreateMaybeMessage<::ColibryLite::Messages::TrajectoryPoint>(Arena*);
template<> ::ColibryLite::Messages::VelocityTrajectory* Arena::CreateMaybeMessage<::ColibryLite::Messages::VelocityTrajectory>(Arena*);
template<> ::ColibryLite::Messages::VerticalPositionTarget* Arena::CreateMaybeMessage<::ColibryLite::Messages::VerticalPositionTarget>(Arena*);
template<> ::ColibryLite::Messages::VerticalThrustRamp* Arena::CreateMaybeMessage<::ColibryLite::Messages::VerticalThrustRamp>(Arena*);
template<> ::ColibryLite::Messages::VerticalVelocityTarget* Arena::CreateMaybeMessage<::ColibryLite::Messages::VerticalVelocityTarget>(Arena*);
template<> ::ColibryLite::Messages::YawPositionTarget* Arena::CreateMaybeMessage<::ColibryLite::Messages::YawPositionTarget>(Arena*);
template<> ::ColibryLite::Messages::YawVelocityTarget* Arena::CreateMaybeMessage<::ColibryLite::Messages::YawVelocityTarget>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ColibryLite {
namespace Messages {

// ===================================================================

class TrajectoryPoint :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.TrajectoryPoint) */ {
 public:
  TrajectoryPoint();
  virtual ~TrajectoryPoint();

  TrajectoryPoint(const TrajectoryPoint& from);

  inline TrajectoryPoint& operator=(const TrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrajectoryPoint(TrajectoryPoint&& from) noexcept
    : TrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline TrajectoryPoint& operator=(TrajectoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrajectoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const TrajectoryPoint*>(
               &_TrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TrajectoryPoint* other);
  friend void swap(TrajectoryPoint& a, TrajectoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrajectoryPoint* New() const final {
    return CreateMaybeMessage<TrajectoryPoint>(nullptr);
  }

  TrajectoryPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrajectoryPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrajectoryPoint& from);
  void MergeFrom(const TrajectoryPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float dx = 2;
  void clear_dx();
  static const int kDxFieldNumber = 2;
  float dx() const;
  void set_dx(float value);

  // float ddx = 3;
  void clear_ddx();
  static const int kDdxFieldNumber = 3;
  float ddx() const;
  void set_ddx(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.TrajectoryPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float dx_;
  float ddx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class VelocityTrajectory :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.VelocityTrajectory) */ {
 public:
  VelocityTrajectory();
  virtual ~VelocityTrajectory();

  VelocityTrajectory(const VelocityTrajectory& from);

  inline VelocityTrajectory& operator=(const VelocityTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VelocityTrajectory(VelocityTrajectory&& from) noexcept
    : VelocityTrajectory() {
    *this = ::std::move(from);
  }

  inline VelocityTrajectory& operator=(VelocityTrajectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VelocityTrajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VelocityTrajectory* internal_default_instance() {
    return reinterpret_cast<const VelocityTrajectory*>(
               &_VelocityTrajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VelocityTrajectory* other);
  friend void swap(VelocityTrajectory& a, VelocityTrajectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VelocityTrajectory* New() const final {
    return CreateMaybeMessage<VelocityTrajectory>(nullptr);
  }

  VelocityTrajectory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VelocityTrajectory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VelocityTrajectory& from);
  void MergeFrom(const VelocityTrajectory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VelocityTrajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float dx = 2;
  void clear_dx();
  static const int kDxFieldNumber = 2;
  float dx() const;
  void set_dx(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.VelocityTrajectory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float dx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class HorizontalTrajectoryPoint :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.HorizontalTrajectoryPoint) */ {
 public:
  HorizontalTrajectoryPoint();
  virtual ~HorizontalTrajectoryPoint();

  HorizontalTrajectoryPoint(const HorizontalTrajectoryPoint& from);

  inline HorizontalTrajectoryPoint& operator=(const HorizontalTrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HorizontalTrajectoryPoint(HorizontalTrajectoryPoint&& from) noexcept
    : HorizontalTrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline HorizontalTrajectoryPoint& operator=(HorizontalTrajectoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HorizontalTrajectoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HorizontalTrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const HorizontalTrajectoryPoint*>(
               &_HorizontalTrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HorizontalTrajectoryPoint* other);
  friend void swap(HorizontalTrajectoryPoint& a, HorizontalTrajectoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HorizontalTrajectoryPoint* New() const final {
    return CreateMaybeMessage<HorizontalTrajectoryPoint>(nullptr);
  }

  HorizontalTrajectoryPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HorizontalTrajectoryPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HorizontalTrajectoryPoint& from);
  void MergeFrom(const HorizontalTrajectoryPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HorizontalTrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.TrajectoryPoint x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  const ::ColibryLite::Messages::TrajectoryPoint& x() const;
  ::ColibryLite::Messages::TrajectoryPoint* release_x();
  ::ColibryLite::Messages::TrajectoryPoint* mutable_x();
  void set_allocated_x(::ColibryLite::Messages::TrajectoryPoint* x);

  // .ColibryLite.Messages.TrajectoryPoint y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  const ::ColibryLite::Messages::TrajectoryPoint& y() const;
  ::ColibryLite::Messages::TrajectoryPoint* release_y();
  ::ColibryLite::Messages::TrajectoryPoint* mutable_y();
  void set_allocated_y(::ColibryLite::Messages::TrajectoryPoint* y);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.HorizontalTrajectoryPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ColibryLite::Messages::TrajectoryPoint* x_;
  ::ColibryLite::Messages::TrajectoryPoint* y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class HorizontalVelocityTrajectory :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.HorizontalVelocityTrajectory) */ {
 public:
  HorizontalVelocityTrajectory();
  virtual ~HorizontalVelocityTrajectory();

  HorizontalVelocityTrajectory(const HorizontalVelocityTrajectory& from);

  inline HorizontalVelocityTrajectory& operator=(const HorizontalVelocityTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HorizontalVelocityTrajectory(HorizontalVelocityTrajectory&& from) noexcept
    : HorizontalVelocityTrajectory() {
    *this = ::std::move(from);
  }

  inline HorizontalVelocityTrajectory& operator=(HorizontalVelocityTrajectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HorizontalVelocityTrajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HorizontalVelocityTrajectory* internal_default_instance() {
    return reinterpret_cast<const HorizontalVelocityTrajectory*>(
               &_HorizontalVelocityTrajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HorizontalVelocityTrajectory* other);
  friend void swap(HorizontalVelocityTrajectory& a, HorizontalVelocityTrajectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HorizontalVelocityTrajectory* New() const final {
    return CreateMaybeMessage<HorizontalVelocityTrajectory>(nullptr);
  }

  HorizontalVelocityTrajectory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HorizontalVelocityTrajectory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HorizontalVelocityTrajectory& from);
  void MergeFrom(const HorizontalVelocityTrajectory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HorizontalVelocityTrajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.VelocityTrajectory x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  const ::ColibryLite::Messages::VelocityTrajectory& x() const;
  ::ColibryLite::Messages::VelocityTrajectory* release_x();
  ::ColibryLite::Messages::VelocityTrajectory* mutable_x();
  void set_allocated_x(::ColibryLite::Messages::VelocityTrajectory* x);

  // .ColibryLite.Messages.VelocityTrajectory y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  const ::ColibryLite::Messages::VelocityTrajectory& y() const;
  ::ColibryLite::Messages::VelocityTrajectory* release_y();
  ::ColibryLite::Messages::VelocityTrajectory* mutable_y();
  void set_allocated_y(::ColibryLite::Messages::VelocityTrajectory* y);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.HorizontalVelocityTrajectory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ColibryLite::Messages::VelocityTrajectory* x_;
  ::ColibryLite::Messages::VelocityTrajectory* y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class TiltTrajectoryPoint :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.TiltTrajectoryPoint) */ {
 public:
  TiltTrajectoryPoint();
  virtual ~TiltTrajectoryPoint();

  TiltTrajectoryPoint(const TiltTrajectoryPoint& from);

  inline TiltTrajectoryPoint& operator=(const TiltTrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiltTrajectoryPoint(TiltTrajectoryPoint&& from) noexcept
    : TiltTrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline TiltTrajectoryPoint& operator=(TiltTrajectoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TiltTrajectoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiltTrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const TiltTrajectoryPoint*>(
               &_TiltTrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TiltTrajectoryPoint* other);
  friend void swap(TiltTrajectoryPoint& a, TiltTrajectoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiltTrajectoryPoint* New() const final {
    return CreateMaybeMessage<TiltTrajectoryPoint>(nullptr);
  }

  TiltTrajectoryPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TiltTrajectoryPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TiltTrajectoryPoint& from);
  void MergeFrom(const TiltTrajectoryPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TiltTrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.TrajectoryPoint phi = 1;
  bool has_phi() const;
  void clear_phi();
  static const int kPhiFieldNumber = 1;
  const ::ColibryLite::Messages::TrajectoryPoint& phi() const;
  ::ColibryLite::Messages::TrajectoryPoint* release_phi();
  ::ColibryLite::Messages::TrajectoryPoint* mutable_phi();
  void set_allocated_phi(::ColibryLite::Messages::TrajectoryPoint* phi);

  // .ColibryLite.Messages.TrajectoryPoint theta = 2;
  bool has_theta() const;
  void clear_theta();
  static const int kThetaFieldNumber = 2;
  const ::ColibryLite::Messages::TrajectoryPoint& theta() const;
  ::ColibryLite::Messages::TrajectoryPoint* release_theta();
  ::ColibryLite::Messages::TrajectoryPoint* mutable_theta();
  void set_allocated_theta(::ColibryLite::Messages::TrajectoryPoint* theta);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.TiltTrajectoryPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ColibryLite::Messages::TrajectoryPoint* phi_;
  ::ColibryLite::Messages::TrajectoryPoint* theta_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class VerticalThrustRamp :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.VerticalThrustRamp) */ {
 public:
  VerticalThrustRamp();
  virtual ~VerticalThrustRamp();

  VerticalThrustRamp(const VerticalThrustRamp& from);

  inline VerticalThrustRamp& operator=(const VerticalThrustRamp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerticalThrustRamp(VerticalThrustRamp&& from) noexcept
    : VerticalThrustRamp() {
    *this = ::std::move(from);
  }

  inline VerticalThrustRamp& operator=(VerticalThrustRamp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerticalThrustRamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerticalThrustRamp* internal_default_instance() {
    return reinterpret_cast<const VerticalThrustRamp*>(
               &_VerticalThrustRamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(VerticalThrustRamp* other);
  friend void swap(VerticalThrustRamp& a, VerticalThrustRamp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerticalThrustRamp* New() const final {
    return CreateMaybeMessage<VerticalThrustRamp>(nullptr);
  }

  VerticalThrustRamp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerticalThrustRamp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerticalThrustRamp& from);
  void MergeFrom(const VerticalThrustRamp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerticalThrustRamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float normalized_thrust_rate = 1;
  void clear_normalized_thrust_rate();
  static const int kNormalizedThrustRateFieldNumber = 1;
  float normalized_thrust_rate() const;
  void set_normalized_thrust_rate(float value);

  // float target_normalized_thrust = 2;
  void clear_target_normalized_thrust();
  static const int kTargetNormalizedThrustFieldNumber = 2;
  float target_normalized_thrust() const;
  void set_target_normalized_thrust(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.VerticalThrustRamp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float normalized_thrust_rate_;
  float target_normalized_thrust_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class HorizontalPositionTarget :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.HorizontalPositionTarget) */ {
 public:
  HorizontalPositionTarget();
  virtual ~HorizontalPositionTarget();

  HorizontalPositionTarget(const HorizontalPositionTarget& from);

  inline HorizontalPositionTarget& operator=(const HorizontalPositionTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HorizontalPositionTarget(HorizontalPositionTarget&& from) noexcept
    : HorizontalPositionTarget() {
    *this = ::std::move(from);
  }

  inline HorizontalPositionTarget& operator=(HorizontalPositionTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HorizontalPositionTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HorizontalPositionTarget* internal_default_instance() {
    return reinterpret_cast<const HorizontalPositionTarget*>(
               &_HorizontalPositionTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(HorizontalPositionTarget* other);
  friend void swap(HorizontalPositionTarget& a, HorizontalPositionTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HorizontalPositionTarget* New() const final {
    return CreateMaybeMessage<HorizontalPositionTarget>(nullptr);
  }

  HorizontalPositionTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HorizontalPositionTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HorizontalPositionTarget& from);
  void MergeFrom(const HorizontalPositionTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HorizontalPositionTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.HorizontalPositionTargetKind.Enum kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::ColibryLite::Messages::HorizontalPositionTargetKind::Enum kind() const;
  void set_kind(::ColibryLite::Messages::HorizontalPositionTargetKind::Enum value);

  // float threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  float threshold() const;
  void set_threshold(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.HorizontalPositionTarget)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int kind_;
  float threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class HorizontalVelocityTarget :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.HorizontalVelocityTarget) */ {
 public:
  HorizontalVelocityTarget();
  virtual ~HorizontalVelocityTarget();

  HorizontalVelocityTarget(const HorizontalVelocityTarget& from);

  inline HorizontalVelocityTarget& operator=(const HorizontalVelocityTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HorizontalVelocityTarget(HorizontalVelocityTarget&& from) noexcept
    : HorizontalVelocityTarget() {
    *this = ::std::move(from);
  }

  inline HorizontalVelocityTarget& operator=(HorizontalVelocityTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HorizontalVelocityTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HorizontalVelocityTarget* internal_default_instance() {
    return reinterpret_cast<const HorizontalVelocityTarget*>(
               &_HorizontalVelocityTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(HorizontalVelocityTarget* other);
  friend void swap(HorizontalVelocityTarget& a, HorizontalVelocityTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HorizontalVelocityTarget* New() const final {
    return CreateMaybeMessage<HorizontalVelocityTarget>(nullptr);
  }

  HorizontalVelocityTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HorizontalVelocityTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HorizontalVelocityTarget& from);
  void MergeFrom(const HorizontalVelocityTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HorizontalVelocityTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.HorizontalVelocityTargetKind.Enum kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::ColibryLite::Messages::HorizontalVelocityTargetKind::Enum kind() const;
  void set_kind(::ColibryLite::Messages::HorizontalVelocityTargetKind::Enum value);

  // float threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  float threshold() const;
  void set_threshold(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.HorizontalVelocityTarget)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int kind_;
  float threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class VerticalPositionTarget :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.VerticalPositionTarget) */ {
 public:
  VerticalPositionTarget();
  virtual ~VerticalPositionTarget();

  VerticalPositionTarget(const VerticalPositionTarget& from);

  inline VerticalPositionTarget& operator=(const VerticalPositionTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerticalPositionTarget(VerticalPositionTarget&& from) noexcept
    : VerticalPositionTarget() {
    *this = ::std::move(from);
  }

  inline VerticalPositionTarget& operator=(VerticalPositionTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerticalPositionTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerticalPositionTarget* internal_default_instance() {
    return reinterpret_cast<const VerticalPositionTarget*>(
               &_VerticalPositionTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(VerticalPositionTarget* other);
  friend void swap(VerticalPositionTarget& a, VerticalPositionTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerticalPositionTarget* New() const final {
    return CreateMaybeMessage<VerticalPositionTarget>(nullptr);
  }

  VerticalPositionTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerticalPositionTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerticalPositionTarget& from);
  void MergeFrom(const VerticalPositionTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerticalPositionTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.VerticalPositionTargetKind.Enum kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::ColibryLite::Messages::VerticalPositionTargetKind::Enum kind() const;
  void set_kind(::ColibryLite::Messages::VerticalPositionTargetKind::Enum value);

  // float threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  float threshold() const;
  void set_threshold(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.VerticalPositionTarget)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int kind_;
  float threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class VerticalVelocityTarget :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.VerticalVelocityTarget) */ {
 public:
  VerticalVelocityTarget();
  virtual ~VerticalVelocityTarget();

  VerticalVelocityTarget(const VerticalVelocityTarget& from);

  inline VerticalVelocityTarget& operator=(const VerticalVelocityTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerticalVelocityTarget(VerticalVelocityTarget&& from) noexcept
    : VerticalVelocityTarget() {
    *this = ::std::move(from);
  }

  inline VerticalVelocityTarget& operator=(VerticalVelocityTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerticalVelocityTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerticalVelocityTarget* internal_default_instance() {
    return reinterpret_cast<const VerticalVelocityTarget*>(
               &_VerticalVelocityTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(VerticalVelocityTarget* other);
  friend void swap(VerticalVelocityTarget& a, VerticalVelocityTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerticalVelocityTarget* New() const final {
    return CreateMaybeMessage<VerticalVelocityTarget>(nullptr);
  }

  VerticalVelocityTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerticalVelocityTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerticalVelocityTarget& from);
  void MergeFrom(const VerticalVelocityTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerticalVelocityTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.VerticalVelocityTargetKind.Enum kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::ColibryLite::Messages::VerticalVelocityTargetKind::Enum kind() const;
  void set_kind(::ColibryLite::Messages::VerticalVelocityTargetKind::Enum value);

  // float threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  float threshold() const;
  void set_threshold(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.VerticalVelocityTarget)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int kind_;
  float threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class YawPositionTarget :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.YawPositionTarget) */ {
 public:
  YawPositionTarget();
  virtual ~YawPositionTarget();

  YawPositionTarget(const YawPositionTarget& from);

  inline YawPositionTarget& operator=(const YawPositionTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YawPositionTarget(YawPositionTarget&& from) noexcept
    : YawPositionTarget() {
    *this = ::std::move(from);
  }

  inline YawPositionTarget& operator=(YawPositionTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const YawPositionTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const YawPositionTarget* internal_default_instance() {
    return reinterpret_cast<const YawPositionTarget*>(
               &_YawPositionTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(YawPositionTarget* other);
  friend void swap(YawPositionTarget& a, YawPositionTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YawPositionTarget* New() const final {
    return CreateMaybeMessage<YawPositionTarget>(nullptr);
  }

  YawPositionTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<YawPositionTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const YawPositionTarget& from);
  void MergeFrom(const YawPositionTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(YawPositionTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.YawPositionTargetKind.Enum kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::ColibryLite::Messages::YawPositionTargetKind::Enum kind() const;
  void set_kind(::ColibryLite::Messages::YawPositionTargetKind::Enum value);

  // float threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  float threshold() const;
  void set_threshold(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.YawPositionTarget)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int kind_;
  float threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class YawVelocityTarget :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ColibryLite.Messages.YawVelocityTarget) */ {
 public:
  YawVelocityTarget();
  virtual ~YawVelocityTarget();

  YawVelocityTarget(const YawVelocityTarget& from);

  inline YawVelocityTarget& operator=(const YawVelocityTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YawVelocityTarget(YawVelocityTarget&& from) noexcept
    : YawVelocityTarget() {
    *this = ::std::move(from);
  }

  inline YawVelocityTarget& operator=(YawVelocityTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const YawVelocityTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const YawVelocityTarget* internal_default_instance() {
    return reinterpret_cast<const YawVelocityTarget*>(
               &_YawVelocityTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(YawVelocityTarget* other);
  friend void swap(YawVelocityTarget& a, YawVelocityTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YawVelocityTarget* New() const final {
    return CreateMaybeMessage<YawVelocityTarget>(nullptr);
  }

  YawVelocityTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<YawVelocityTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const YawVelocityTarget& from);
  void MergeFrom(const YawVelocityTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(YawVelocityTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ColibryLite.Messages.YawVelocityTargetKind.Enum kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::ColibryLite::Messages::YawVelocityTargetKind::Enum kind() const;
  void set_kind(::ColibryLite::Messages::YawVelocityTargetKind::Enum value);

  // float threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  float threshold() const;
  void set_threshold(float value);

  // @@protoc_insertion_point(class_scope:ColibryLite.Messages.YawVelocityTarget)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int kind_;
  float threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_colibrylite_2ftypes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrajectoryPoint

// float x = 1;
inline void TrajectoryPoint::clear_x() {
  x_ = 0;
}
inline float TrajectoryPoint::x() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.TrajectoryPoint.x)
  return x_;
}
inline void TrajectoryPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.TrajectoryPoint.x)
}

// float dx = 2;
inline void TrajectoryPoint::clear_dx() {
  dx_ = 0;
}
inline float TrajectoryPoint::dx() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.TrajectoryPoint.dx)
  return dx_;
}
inline void TrajectoryPoint::set_dx(float value) {
  
  dx_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.TrajectoryPoint.dx)
}

// float ddx = 3;
inline void TrajectoryPoint::clear_ddx() {
  ddx_ = 0;
}
inline float TrajectoryPoint::ddx() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.TrajectoryPoint.ddx)
  return ddx_;
}
inline void TrajectoryPoint::set_ddx(float value) {
  
  ddx_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.TrajectoryPoint.ddx)
}

// -------------------------------------------------------------------

// VelocityTrajectory

// float x = 1;
inline void VelocityTrajectory::clear_x() {
  x_ = 0;
}
inline float VelocityTrajectory::x() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VelocityTrajectory.x)
  return x_;
}
inline void VelocityTrajectory::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VelocityTrajectory.x)
}

// float dx = 2;
inline void VelocityTrajectory::clear_dx() {
  dx_ = 0;
}
inline float VelocityTrajectory::dx() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VelocityTrajectory.dx)
  return dx_;
}
inline void VelocityTrajectory::set_dx(float value) {
  
  dx_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VelocityTrajectory.dx)
}

// -------------------------------------------------------------------

// HorizontalTrajectoryPoint

// .ColibryLite.Messages.TrajectoryPoint x = 1;
inline bool HorizontalTrajectoryPoint::has_x() const {
  return this != internal_default_instance() && x_ != nullptr;
}
inline void HorizontalTrajectoryPoint::clear_x() {
  if (GetArenaNoVirtual() == nullptr && x_ != nullptr) {
    delete x_;
  }
  x_ = nullptr;
}
inline const ::ColibryLite::Messages::TrajectoryPoint& HorizontalTrajectoryPoint::x() const {
  const ::ColibryLite::Messages::TrajectoryPoint* p = x_;
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalTrajectoryPoint.x)
  return p != nullptr ? *p : *reinterpret_cast<const ::ColibryLite::Messages::TrajectoryPoint*>(
      &::ColibryLite::Messages::_TrajectoryPoint_default_instance_);
}
inline ::ColibryLite::Messages::TrajectoryPoint* HorizontalTrajectoryPoint::release_x() {
  // @@protoc_insertion_point(field_release:ColibryLite.Messages.HorizontalTrajectoryPoint.x)
  
  ::ColibryLite::Messages::TrajectoryPoint* temp = x_;
  x_ = nullptr;
  return temp;
}
inline ::ColibryLite::Messages::TrajectoryPoint* HorizontalTrajectoryPoint::mutable_x() {
  
  if (x_ == nullptr) {
    auto* p = CreateMaybeMessage<::ColibryLite::Messages::TrajectoryPoint>(GetArenaNoVirtual());
    x_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ColibryLite.Messages.HorizontalTrajectoryPoint.x)
  return x_;
}
inline void HorizontalTrajectoryPoint::set_allocated_x(::ColibryLite::Messages::TrajectoryPoint* x) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete x_;
  }
  if (x) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      x = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, x, submessage_arena);
    }
    
  } else {
    
  }
  x_ = x;
  // @@protoc_insertion_point(field_set_allocated:ColibryLite.Messages.HorizontalTrajectoryPoint.x)
}

// .ColibryLite.Messages.TrajectoryPoint y = 2;
inline bool HorizontalTrajectoryPoint::has_y() const {
  return this != internal_default_instance() && y_ != nullptr;
}
inline void HorizontalTrajectoryPoint::clear_y() {
  if (GetArenaNoVirtual() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
}
inline const ::ColibryLite::Messages::TrajectoryPoint& HorizontalTrajectoryPoint::y() const {
  const ::ColibryLite::Messages::TrajectoryPoint* p = y_;
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalTrajectoryPoint.y)
  return p != nullptr ? *p : *reinterpret_cast<const ::ColibryLite::Messages::TrajectoryPoint*>(
      &::ColibryLite::Messages::_TrajectoryPoint_default_instance_);
}
inline ::ColibryLite::Messages::TrajectoryPoint* HorizontalTrajectoryPoint::release_y() {
  // @@protoc_insertion_point(field_release:ColibryLite.Messages.HorizontalTrajectoryPoint.y)
  
  ::ColibryLite::Messages::TrajectoryPoint* temp = y_;
  y_ = nullptr;
  return temp;
}
inline ::ColibryLite::Messages::TrajectoryPoint* HorizontalTrajectoryPoint::mutable_y() {
  
  if (y_ == nullptr) {
    auto* p = CreateMaybeMessage<::ColibryLite::Messages::TrajectoryPoint>(GetArenaNoVirtual());
    y_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ColibryLite.Messages.HorizontalTrajectoryPoint.y)
  return y_;
}
inline void HorizontalTrajectoryPoint::set_allocated_y(::ColibryLite::Messages::TrajectoryPoint* y) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete y_;
  }
  if (y) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      y = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, y, submessage_arena);
    }
    
  } else {
    
  }
  y_ = y;
  // @@protoc_insertion_point(field_set_allocated:ColibryLite.Messages.HorizontalTrajectoryPoint.y)
}

// -------------------------------------------------------------------

// HorizontalVelocityTrajectory

// .ColibryLite.Messages.VelocityTrajectory x = 1;
inline bool HorizontalVelocityTrajectory::has_x() const {
  return this != internal_default_instance() && x_ != nullptr;
}
inline void HorizontalVelocityTrajectory::clear_x() {
  if (GetArenaNoVirtual() == nullptr && x_ != nullptr) {
    delete x_;
  }
  x_ = nullptr;
}
inline const ::ColibryLite::Messages::VelocityTrajectory& HorizontalVelocityTrajectory::x() const {
  const ::ColibryLite::Messages::VelocityTrajectory* p = x_;
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalVelocityTrajectory.x)
  return p != nullptr ? *p : *reinterpret_cast<const ::ColibryLite::Messages::VelocityTrajectory*>(
      &::ColibryLite::Messages::_VelocityTrajectory_default_instance_);
}
inline ::ColibryLite::Messages::VelocityTrajectory* HorizontalVelocityTrajectory::release_x() {
  // @@protoc_insertion_point(field_release:ColibryLite.Messages.HorizontalVelocityTrajectory.x)
  
  ::ColibryLite::Messages::VelocityTrajectory* temp = x_;
  x_ = nullptr;
  return temp;
}
inline ::ColibryLite::Messages::VelocityTrajectory* HorizontalVelocityTrajectory::mutable_x() {
  
  if (x_ == nullptr) {
    auto* p = CreateMaybeMessage<::ColibryLite::Messages::VelocityTrajectory>(GetArenaNoVirtual());
    x_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ColibryLite.Messages.HorizontalVelocityTrajectory.x)
  return x_;
}
inline void HorizontalVelocityTrajectory::set_allocated_x(::ColibryLite::Messages::VelocityTrajectory* x) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete x_;
  }
  if (x) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      x = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, x, submessage_arena);
    }
    
  } else {
    
  }
  x_ = x;
  // @@protoc_insertion_point(field_set_allocated:ColibryLite.Messages.HorizontalVelocityTrajectory.x)
}

// .ColibryLite.Messages.VelocityTrajectory y = 2;
inline bool HorizontalVelocityTrajectory::has_y() const {
  return this != internal_default_instance() && y_ != nullptr;
}
inline void HorizontalVelocityTrajectory::clear_y() {
  if (GetArenaNoVirtual() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
}
inline const ::ColibryLite::Messages::VelocityTrajectory& HorizontalVelocityTrajectory::y() const {
  const ::ColibryLite::Messages::VelocityTrajectory* p = y_;
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalVelocityTrajectory.y)
  return p != nullptr ? *p : *reinterpret_cast<const ::ColibryLite::Messages::VelocityTrajectory*>(
      &::ColibryLite::Messages::_VelocityTrajectory_default_instance_);
}
inline ::ColibryLite::Messages::VelocityTrajectory* HorizontalVelocityTrajectory::release_y() {
  // @@protoc_insertion_point(field_release:ColibryLite.Messages.HorizontalVelocityTrajectory.y)
  
  ::ColibryLite::Messages::VelocityTrajectory* temp = y_;
  y_ = nullptr;
  return temp;
}
inline ::ColibryLite::Messages::VelocityTrajectory* HorizontalVelocityTrajectory::mutable_y() {
  
  if (y_ == nullptr) {
    auto* p = CreateMaybeMessage<::ColibryLite::Messages::VelocityTrajectory>(GetArenaNoVirtual());
    y_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ColibryLite.Messages.HorizontalVelocityTrajectory.y)
  return y_;
}
inline void HorizontalVelocityTrajectory::set_allocated_y(::ColibryLite::Messages::VelocityTrajectory* y) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete y_;
  }
  if (y) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      y = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, y, submessage_arena);
    }
    
  } else {
    
  }
  y_ = y;
  // @@protoc_insertion_point(field_set_allocated:ColibryLite.Messages.HorizontalVelocityTrajectory.y)
}

// -------------------------------------------------------------------

// TiltTrajectoryPoint

// .ColibryLite.Messages.TrajectoryPoint phi = 1;
inline bool TiltTrajectoryPoint::has_phi() const {
  return this != internal_default_instance() && phi_ != nullptr;
}
inline void TiltTrajectoryPoint::clear_phi() {
  if (GetArenaNoVirtual() == nullptr && phi_ != nullptr) {
    delete phi_;
  }
  phi_ = nullptr;
}
inline const ::ColibryLite::Messages::TrajectoryPoint& TiltTrajectoryPoint::phi() const {
  const ::ColibryLite::Messages::TrajectoryPoint* p = phi_;
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.TiltTrajectoryPoint.phi)
  return p != nullptr ? *p : *reinterpret_cast<const ::ColibryLite::Messages::TrajectoryPoint*>(
      &::ColibryLite::Messages::_TrajectoryPoint_default_instance_);
}
inline ::ColibryLite::Messages::TrajectoryPoint* TiltTrajectoryPoint::release_phi() {
  // @@protoc_insertion_point(field_release:ColibryLite.Messages.TiltTrajectoryPoint.phi)
  
  ::ColibryLite::Messages::TrajectoryPoint* temp = phi_;
  phi_ = nullptr;
  return temp;
}
inline ::ColibryLite::Messages::TrajectoryPoint* TiltTrajectoryPoint::mutable_phi() {
  
  if (phi_ == nullptr) {
    auto* p = CreateMaybeMessage<::ColibryLite::Messages::TrajectoryPoint>(GetArenaNoVirtual());
    phi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ColibryLite.Messages.TiltTrajectoryPoint.phi)
  return phi_;
}
inline void TiltTrajectoryPoint::set_allocated_phi(::ColibryLite::Messages::TrajectoryPoint* phi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete phi_;
  }
  if (phi) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      phi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, phi, submessage_arena);
    }
    
  } else {
    
  }
  phi_ = phi;
  // @@protoc_insertion_point(field_set_allocated:ColibryLite.Messages.TiltTrajectoryPoint.phi)
}

// .ColibryLite.Messages.TrajectoryPoint theta = 2;
inline bool TiltTrajectoryPoint::has_theta() const {
  return this != internal_default_instance() && theta_ != nullptr;
}
inline void TiltTrajectoryPoint::clear_theta() {
  if (GetArenaNoVirtual() == nullptr && theta_ != nullptr) {
    delete theta_;
  }
  theta_ = nullptr;
}
inline const ::ColibryLite::Messages::TrajectoryPoint& TiltTrajectoryPoint::theta() const {
  const ::ColibryLite::Messages::TrajectoryPoint* p = theta_;
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.TiltTrajectoryPoint.theta)
  return p != nullptr ? *p : *reinterpret_cast<const ::ColibryLite::Messages::TrajectoryPoint*>(
      &::ColibryLite::Messages::_TrajectoryPoint_default_instance_);
}
inline ::ColibryLite::Messages::TrajectoryPoint* TiltTrajectoryPoint::release_theta() {
  // @@protoc_insertion_point(field_release:ColibryLite.Messages.TiltTrajectoryPoint.theta)
  
  ::ColibryLite::Messages::TrajectoryPoint* temp = theta_;
  theta_ = nullptr;
  return temp;
}
inline ::ColibryLite::Messages::TrajectoryPoint* TiltTrajectoryPoint::mutable_theta() {
  
  if (theta_ == nullptr) {
    auto* p = CreateMaybeMessage<::ColibryLite::Messages::TrajectoryPoint>(GetArenaNoVirtual());
    theta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ColibryLite.Messages.TiltTrajectoryPoint.theta)
  return theta_;
}
inline void TiltTrajectoryPoint::set_allocated_theta(::ColibryLite::Messages::TrajectoryPoint* theta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete theta_;
  }
  if (theta) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      theta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, theta, submessage_arena);
    }
    
  } else {
    
  }
  theta_ = theta;
  // @@protoc_insertion_point(field_set_allocated:ColibryLite.Messages.TiltTrajectoryPoint.theta)
}

// -------------------------------------------------------------------

// VerticalThrustRamp

// float normalized_thrust_rate = 1;
inline void VerticalThrustRamp::clear_normalized_thrust_rate() {
  normalized_thrust_rate_ = 0;
}
inline float VerticalThrustRamp::normalized_thrust_rate() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VerticalThrustRamp.normalized_thrust_rate)
  return normalized_thrust_rate_;
}
inline void VerticalThrustRamp::set_normalized_thrust_rate(float value) {
  
  normalized_thrust_rate_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VerticalThrustRamp.normalized_thrust_rate)
}

// float target_normalized_thrust = 2;
inline void VerticalThrustRamp::clear_target_normalized_thrust() {
  target_normalized_thrust_ = 0;
}
inline float VerticalThrustRamp::target_normalized_thrust() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VerticalThrustRamp.target_normalized_thrust)
  return target_normalized_thrust_;
}
inline void VerticalThrustRamp::set_target_normalized_thrust(float value) {
  
  target_normalized_thrust_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VerticalThrustRamp.target_normalized_thrust)
}

// -------------------------------------------------------------------

// HorizontalPositionTarget

// .ColibryLite.Messages.HorizontalPositionTargetKind.Enum kind = 2;
inline void HorizontalPositionTarget::clear_kind() {
  kind_ = 0;
}
inline ::ColibryLite::Messages::HorizontalPositionTargetKind::Enum HorizontalPositionTarget::kind() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalPositionTarget.kind)
  return static_cast< ::ColibryLite::Messages::HorizontalPositionTargetKind::Enum >(kind_);
}
inline void HorizontalPositionTarget::set_kind(::ColibryLite::Messages::HorizontalPositionTargetKind::Enum value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.HorizontalPositionTarget.kind)
}

// float threshold = 3;
inline void HorizontalPositionTarget::clear_threshold() {
  threshold_ = 0;
}
inline float HorizontalPositionTarget::threshold() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalPositionTarget.threshold)
  return threshold_;
}
inline void HorizontalPositionTarget::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.HorizontalPositionTarget.threshold)
}

// -------------------------------------------------------------------

// HorizontalVelocityTarget

// .ColibryLite.Messages.HorizontalVelocityTargetKind.Enum kind = 2;
inline void HorizontalVelocityTarget::clear_kind() {
  kind_ = 0;
}
inline ::ColibryLite::Messages::HorizontalVelocityTargetKind::Enum HorizontalVelocityTarget::kind() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalVelocityTarget.kind)
  return static_cast< ::ColibryLite::Messages::HorizontalVelocityTargetKind::Enum >(kind_);
}
inline void HorizontalVelocityTarget::set_kind(::ColibryLite::Messages::HorizontalVelocityTargetKind::Enum value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.HorizontalVelocityTarget.kind)
}

// float threshold = 3;
inline void HorizontalVelocityTarget::clear_threshold() {
  threshold_ = 0;
}
inline float HorizontalVelocityTarget::threshold() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.HorizontalVelocityTarget.threshold)
  return threshold_;
}
inline void HorizontalVelocityTarget::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.HorizontalVelocityTarget.threshold)
}

// -------------------------------------------------------------------

// VerticalPositionTarget

// .ColibryLite.Messages.VerticalPositionTargetKind.Enum kind = 2;
inline void VerticalPositionTarget::clear_kind() {
  kind_ = 0;
}
inline ::ColibryLite::Messages::VerticalPositionTargetKind::Enum VerticalPositionTarget::kind() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VerticalPositionTarget.kind)
  return static_cast< ::ColibryLite::Messages::VerticalPositionTargetKind::Enum >(kind_);
}
inline void VerticalPositionTarget::set_kind(::ColibryLite::Messages::VerticalPositionTargetKind::Enum value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VerticalPositionTarget.kind)
}

// float threshold = 3;
inline void VerticalPositionTarget::clear_threshold() {
  threshold_ = 0;
}
inline float VerticalPositionTarget::threshold() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VerticalPositionTarget.threshold)
  return threshold_;
}
inline void VerticalPositionTarget::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VerticalPositionTarget.threshold)
}

// -------------------------------------------------------------------

// VerticalVelocityTarget

// .ColibryLite.Messages.VerticalVelocityTargetKind.Enum kind = 2;
inline void VerticalVelocityTarget::clear_kind() {
  kind_ = 0;
}
inline ::ColibryLite::Messages::VerticalVelocityTargetKind::Enum VerticalVelocityTarget::kind() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VerticalVelocityTarget.kind)
  return static_cast< ::ColibryLite::Messages::VerticalVelocityTargetKind::Enum >(kind_);
}
inline void VerticalVelocityTarget::set_kind(::ColibryLite::Messages::VerticalVelocityTargetKind::Enum value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VerticalVelocityTarget.kind)
}

// float threshold = 3;
inline void VerticalVelocityTarget::clear_threshold() {
  threshold_ = 0;
}
inline float VerticalVelocityTarget::threshold() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.VerticalVelocityTarget.threshold)
  return threshold_;
}
inline void VerticalVelocityTarget::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.VerticalVelocityTarget.threshold)
}

// -------------------------------------------------------------------

// YawPositionTarget

// .ColibryLite.Messages.YawPositionTargetKind.Enum kind = 2;
inline void YawPositionTarget::clear_kind() {
  kind_ = 0;
}
inline ::ColibryLite::Messages::YawPositionTargetKind::Enum YawPositionTarget::kind() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.YawPositionTarget.kind)
  return static_cast< ::ColibryLite::Messages::YawPositionTargetKind::Enum >(kind_);
}
inline void YawPositionTarget::set_kind(::ColibryLite::Messages::YawPositionTargetKind::Enum value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.YawPositionTarget.kind)
}

// float threshold = 3;
inline void YawPositionTarget::clear_threshold() {
  threshold_ = 0;
}
inline float YawPositionTarget::threshold() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.YawPositionTarget.threshold)
  return threshold_;
}
inline void YawPositionTarget::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.YawPositionTarget.threshold)
}

// -------------------------------------------------------------------

// YawVelocityTarget

// .ColibryLite.Messages.YawVelocityTargetKind.Enum kind = 2;
inline void YawVelocityTarget::clear_kind() {
  kind_ = 0;
}
inline ::ColibryLite::Messages::YawVelocityTargetKind::Enum YawVelocityTarget::kind() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.YawVelocityTarget.kind)
  return static_cast< ::ColibryLite::Messages::YawVelocityTargetKind::Enum >(kind_);
}
inline void YawVelocityTarget::set_kind(::ColibryLite::Messages::YawVelocityTargetKind::Enum value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.YawVelocityTarget.kind)
}

// float threshold = 3;
inline void YawVelocityTarget::clear_threshold() {
  threshold_ = 0;
}
inline float YawVelocityTarget::threshold() const {
  // @@protoc_insertion_point(field_get:ColibryLite.Messages.YawVelocityTarget.threshold)
  return threshold_;
}
inline void YawVelocityTarget::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:ColibryLite.Messages.YawVelocityTarget.threshold)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace ColibryLite

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_colibrylite_2ftypes_2eproto
