/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: arsdk/controller_network.proto */

#ifndef PROTOBUF_C_arsdk_2fcontroller_5fnetwork_2eproto__INCLUDED
#define PROTOBUF_C_arsdk_2fcontroller_5fnetwork_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "parrot/protobuf/extensions.pb-c.h"
#include "arsdk/network.pb-c.h"

typedef struct _Arsdk__Controllernetwork__Command Arsdk__Controllernetwork__Command;
typedef struct _Arsdk__Controllernetwork__Command__GetState Arsdk__Controllernetwork__Command__GetState;
typedef struct _Arsdk__Controllernetwork__Event Arsdk__Controllernetwork__Event;
typedef struct _Arsdk__Controllernetwork__Event__State Arsdk__Controllernetwork__Event__State;


/* --- enums --- */


/* --- messages --- */

/*
 * Get current state. 
 */
struct  _Arsdk__Controllernetwork__Command__GetState
{
  ProtobufCMessage base;
};
#define ARSDK__CONTROLLERNETWORK__COMMAND__GET_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__controllernetwork__command__get_state__descriptor) \
     }


typedef enum {
  ARSDK__CONTROLLERNETWORK__COMMAND__ID__NOT_SET = 0,
  ARSDK__CONTROLLERNETWORK__COMMAND__ID_GET_STATE = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARSDK__CONTROLLERNETWORK__COMMAND__ID)
} Arsdk__Controllernetwork__Command__IdCase;

/*
 * This is the entry point to send messages to the drone. 
 */
struct  _Arsdk__Controllernetwork__Command
{
  ProtobufCMessage base;
  Arsdk__Controllernetwork__Command__IdCase id_case;
  union {
    Arsdk__Controllernetwork__Command__GetState *get_state;
  };
};
#define ARSDK__CONTROLLERNETWORK__COMMAND__GET_STATE__FIELD_NUMBER 16
#define ARSDK__CONTROLLERNETWORK__COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__controllernetwork__command__descriptor) \
    , ARSDK__CONTROLLERNETWORK__COMMAND__ID__NOT_SET, {0} }


/*
 * Current state. 
 */
struct  _Arsdk__Controllernetwork__Event__State
{
  ProtobufCMessage base;
  Arsdk__Network__LinksStatus *links_status;
};
#define ARSDK__CONTROLLERNETWORK__EVENT__STATE__LINKS_STATUS__FIELD_NUMBER 4
#define ARSDK__CONTROLLERNETWORK__EVENT__STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__controllernetwork__event__state__descriptor) \
    , NULL }


typedef enum {
  ARSDK__CONTROLLERNETWORK__EVENT__ID__NOT_SET = 0,
  ARSDK__CONTROLLERNETWORK__EVENT__ID_STATE = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARSDK__CONTROLLERNETWORK__EVENT__ID)
} Arsdk__Controllernetwork__Event__IdCase;

/*
 * This is the entry point to receive messages from the drone. 
 */
struct  _Arsdk__Controllernetwork__Event
{
  ProtobufCMessage base;
  Arsdk__Controllernetwork__Event__IdCase id_case;
  union {
    Arsdk__Controllernetwork__Event__State *state;
  };
};
#define ARSDK__CONTROLLERNETWORK__EVENT__STATE__FIELD_NUMBER 16
#define ARSDK__CONTROLLERNETWORK__EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__controllernetwork__event__descriptor) \
    , ARSDK__CONTROLLERNETWORK__EVENT__ID__NOT_SET, {0} }


/* Arsdk__Controllernetwork__Command__GetState methods */
void   arsdk__controllernetwork__command__get_state__init
                     (Arsdk__Controllernetwork__Command__GetState         *message);
/* Arsdk__Controllernetwork__Command methods */
void   arsdk__controllernetwork__command__init
                     (Arsdk__Controllernetwork__Command         *message);
size_t arsdk__controllernetwork__command__get_packed_size
                     (const Arsdk__Controllernetwork__Command   *message);
size_t arsdk__controllernetwork__command__pack
                     (const Arsdk__Controllernetwork__Command   *message,
                      uint8_t             *out);
size_t arsdk__controllernetwork__command__pack_to_buffer
                     (const Arsdk__Controllernetwork__Command   *message,
                      ProtobufCBuffer     *buffer);
Arsdk__Controllernetwork__Command *
       arsdk__controllernetwork__command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arsdk__controllernetwork__command__free_unpacked
                     (Arsdk__Controllernetwork__Command *message,
                      ProtobufCAllocator *allocator);
/* Arsdk__Controllernetwork__Event__State methods */
void   arsdk__controllernetwork__event__state__init
                     (Arsdk__Controllernetwork__Event__State         *message);
/* Arsdk__Controllernetwork__Event methods */
void   arsdk__controllernetwork__event__init
                     (Arsdk__Controllernetwork__Event         *message);
size_t arsdk__controllernetwork__event__get_packed_size
                     (const Arsdk__Controllernetwork__Event   *message);
size_t arsdk__controllernetwork__event__pack
                     (const Arsdk__Controllernetwork__Event   *message,
                      uint8_t             *out);
size_t arsdk__controllernetwork__event__pack_to_buffer
                     (const Arsdk__Controllernetwork__Event   *message,
                      ProtobufCBuffer     *buffer);
Arsdk__Controllernetwork__Event *
       arsdk__controllernetwork__event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arsdk__controllernetwork__event__free_unpacked
                     (Arsdk__Controllernetwork__Event *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Arsdk__Controllernetwork__Command__GetState_Closure)
                 (const Arsdk__Controllernetwork__Command__GetState *message,
                  void *closure_data);
typedef void (*Arsdk__Controllernetwork__Command_Closure)
                 (const Arsdk__Controllernetwork__Command *message,
                  void *closure_data);
typedef void (*Arsdk__Controllernetwork__Event__State_Closure)
                 (const Arsdk__Controllernetwork__Event__State *message,
                  void *closure_data);
typedef void (*Arsdk__Controllernetwork__Event_Closure)
                 (const Arsdk__Controllernetwork__Event *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor arsdk__controllernetwork__command__descriptor;
extern const ProtobufCMessageDescriptor arsdk__controllernetwork__command__get_state__descriptor;
extern const ProtobufCMessageDescriptor arsdk__controllernetwork__event__descriptor;
extern const ProtobufCMessageDescriptor arsdk__controllernetwork__event__state__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_arsdk_2fcontroller_5fnetwork_2eproto__INCLUDED */
