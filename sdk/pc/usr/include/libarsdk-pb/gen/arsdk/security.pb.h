// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arsdk/security.proto

#ifndef PROTOBUF_INCLUDED_arsdk_2fsecurity_2eproto
#define PROTOBUF_INCLUDED_arsdk_2fsecurity_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "parrot/protobuf/extensions.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_arsdk_2fsecurity_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_arsdk_2fsecurity_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_arsdk_2fsecurity_2eproto();
namespace arsdk {
namespace security {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class Command_RegisterApcDroneList;
class Command_RegisterApcDroneListDefaultTypeInternal;
extern Command_RegisterApcDroneListDefaultTypeInternal _Command_RegisterApcDroneList_default_instance_;
class Command_RegisterApcToken;
class Command_RegisterApcTokenDefaultTypeInternal;
extern Command_RegisterApcTokenDefaultTypeInternal _Command_RegisterApcToken_default_instance_;
}  // namespace security
}  // namespace arsdk
namespace google {
namespace protobuf {
template<> ::arsdk::security::Command* Arena::CreateMaybeMessage<::arsdk::security::Command>(Arena*);
template<> ::arsdk::security::Command_RegisterApcDroneList* Arena::CreateMaybeMessage<::arsdk::security::Command_RegisterApcDroneList>(Arena*);
template<> ::arsdk::security::Command_RegisterApcToken* Arena::CreateMaybeMessage<::arsdk::security::Command_RegisterApcToken>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace arsdk {
namespace security {

// ===================================================================

class Command_RegisterApcToken :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:arsdk.security.Command.RegisterApcToken) */ {
 public:
  Command_RegisterApcToken();
  virtual ~Command_RegisterApcToken();

  Command_RegisterApcToken(const Command_RegisterApcToken& from);

  inline Command_RegisterApcToken& operator=(const Command_RegisterApcToken& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command_RegisterApcToken(Command_RegisterApcToken&& from) noexcept
    : Command_RegisterApcToken() {
    *this = ::std::move(from);
  }

  inline Command_RegisterApcToken& operator=(Command_RegisterApcToken&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Command_RegisterApcToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command_RegisterApcToken* internal_default_instance() {
    return reinterpret_cast<const Command_RegisterApcToken*>(
               &_Command_RegisterApcToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Command_RegisterApcToken* other);
  friend void swap(Command_RegisterApcToken& a, Command_RegisterApcToken& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command_RegisterApcToken* New() const final {
    return CreateMaybeMessage<Command_RegisterApcToken>(nullptr);
  }

  Command_RegisterApcToken* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command_RegisterApcToken>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command_RegisterApcToken& from);
  void MergeFrom(const Command_RegisterApcToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command_RegisterApcToken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:arsdk.security.Command.RegisterApcToken)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_arsdk_2fsecurity_2eproto;
};
// -------------------------------------------------------------------

class Command_RegisterApcDroneList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:arsdk.security.Command.RegisterApcDroneList) */ {
 public:
  Command_RegisterApcDroneList();
  virtual ~Command_RegisterApcDroneList();

  Command_RegisterApcDroneList(const Command_RegisterApcDroneList& from);

  inline Command_RegisterApcDroneList& operator=(const Command_RegisterApcDroneList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command_RegisterApcDroneList(Command_RegisterApcDroneList&& from) noexcept
    : Command_RegisterApcDroneList() {
    *this = ::std::move(from);
  }

  inline Command_RegisterApcDroneList& operator=(Command_RegisterApcDroneList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Command_RegisterApcDroneList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command_RegisterApcDroneList* internal_default_instance() {
    return reinterpret_cast<const Command_RegisterApcDroneList*>(
               &_Command_RegisterApcDroneList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Command_RegisterApcDroneList* other);
  friend void swap(Command_RegisterApcDroneList& a, Command_RegisterApcDroneList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command_RegisterApcDroneList* New() const final {
    return CreateMaybeMessage<Command_RegisterApcDroneList>(nullptr);
  }

  Command_RegisterApcDroneList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command_RegisterApcDroneList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command_RegisterApcDroneList& from);
  void MergeFrom(const Command_RegisterApcDroneList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command_RegisterApcDroneList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string list = 1;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::std::string& list() const;
  void set_list(const ::std::string& value);
  #if LANG_CXX11
  void set_list(::std::string&& value);
  #endif
  void set_list(const char* value);
  void set_list(const char* value, size_t size);
  ::std::string* mutable_list();
  ::std::string* release_list();
  void set_allocated_list(::std::string* list);

  // @@protoc_insertion_point(class_scope:arsdk.security.Command.RegisterApcDroneList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_arsdk_2fsecurity_2eproto;
};
// -------------------------------------------------------------------

class Command :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:arsdk.security.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Command& default_instance();

  enum IdCase {
    kRegisterApcToken = 16,
    kRegisterApcDroneList = 17,
    ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(nullptr);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Command_RegisterApcToken RegisterApcToken;
  typedef Command_RegisterApcDroneList RegisterApcDroneList;

  // accessors -------------------------------------------------------

  // .arsdk.security.Command.RegisterApcToken register_apc_token = 16;
  bool has_register_apc_token() const;
  void clear_register_apc_token();
  static const int kRegisterApcTokenFieldNumber = 16;
  const ::arsdk::security::Command_RegisterApcToken& register_apc_token() const;
  ::arsdk::security::Command_RegisterApcToken* release_register_apc_token();
  ::arsdk::security::Command_RegisterApcToken* mutable_register_apc_token();
  void set_allocated_register_apc_token(::arsdk::security::Command_RegisterApcToken* register_apc_token);

  // .arsdk.security.Command.RegisterApcDroneList register_apc_drone_list = 17;
  bool has_register_apc_drone_list() const;
  void clear_register_apc_drone_list();
  static const int kRegisterApcDroneListFieldNumber = 17;
  const ::arsdk::security::Command_RegisterApcDroneList& register_apc_drone_list() const;
  ::arsdk::security::Command_RegisterApcDroneList* release_register_apc_drone_list();
  ::arsdk::security::Command_RegisterApcDroneList* mutable_register_apc_drone_list();
  void set_allocated_register_apc_drone_list(::arsdk::security::Command_RegisterApcDroneList* register_apc_drone_list);

  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:arsdk.security.Command)
 private:
  class HasBitSetters;
  void set_has_register_apc_token();
  void set_has_register_apc_drone_list();

  inline bool has_id() const;
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union IdUnion {
    IdUnion() {}
    ::arsdk::security::Command_RegisterApcToken* register_apc_token_;
    ::arsdk::security::Command_RegisterApcDroneList* register_apc_drone_list_;
  } id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_arsdk_2fsecurity_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Command_RegisterApcToken

// string token = 1;
inline void Command_RegisterApcToken::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command_RegisterApcToken::token() const {
  // @@protoc_insertion_point(field_get:arsdk.security.Command.RegisterApcToken.token)
  return token_.GetNoArena();
}
inline void Command_RegisterApcToken::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arsdk.security.Command.RegisterApcToken.token)
}
#if LANG_CXX11
inline void Command_RegisterApcToken::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arsdk.security.Command.RegisterApcToken.token)
}
#endif
inline void Command_RegisterApcToken::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arsdk.security.Command.RegisterApcToken.token)
}
inline void Command_RegisterApcToken::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arsdk.security.Command.RegisterApcToken.token)
}
inline ::std::string* Command_RegisterApcToken::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:arsdk.security.Command.RegisterApcToken.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command_RegisterApcToken::release_token() {
  // @@protoc_insertion_point(field_release:arsdk.security.Command.RegisterApcToken.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command_RegisterApcToken::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:arsdk.security.Command.RegisterApcToken.token)
}

// -------------------------------------------------------------------

// Command_RegisterApcDroneList

// string list = 1;
inline void Command_RegisterApcDroneList::clear_list() {
  list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command_RegisterApcDroneList::list() const {
  // @@protoc_insertion_point(field_get:arsdk.security.Command.RegisterApcDroneList.list)
  return list_.GetNoArena();
}
inline void Command_RegisterApcDroneList::set_list(const ::std::string& value) {
  
  list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arsdk.security.Command.RegisterApcDroneList.list)
}
#if LANG_CXX11
inline void Command_RegisterApcDroneList::set_list(::std::string&& value) {
  
  list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arsdk.security.Command.RegisterApcDroneList.list)
}
#endif
inline void Command_RegisterApcDroneList::set_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arsdk.security.Command.RegisterApcDroneList.list)
}
inline void Command_RegisterApcDroneList::set_list(const char* value, size_t size) {
  
  list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arsdk.security.Command.RegisterApcDroneList.list)
}
inline ::std::string* Command_RegisterApcDroneList::mutable_list() {
  
  // @@protoc_insertion_point(field_mutable:arsdk.security.Command.RegisterApcDroneList.list)
  return list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command_RegisterApcDroneList::release_list() {
  // @@protoc_insertion_point(field_release:arsdk.security.Command.RegisterApcDroneList.list)
  
  return list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command_RegisterApcDroneList::set_allocated_list(::std::string* list) {
  if (list != nullptr) {
    
  } else {
    
  }
  list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), list);
  // @@protoc_insertion_point(field_set_allocated:arsdk.security.Command.RegisterApcDroneList.list)
}

// -------------------------------------------------------------------

// Command

// .arsdk.security.Command.RegisterApcToken register_apc_token = 16;
inline bool Command::has_register_apc_token() const {
  return id_case() == kRegisterApcToken;
}
inline void Command::set_has_register_apc_token() {
  _oneof_case_[0] = kRegisterApcToken;
}
inline void Command::clear_register_apc_token() {
  if (has_register_apc_token()) {
    delete id_.register_apc_token_;
    clear_has_id();
  }
}
inline ::arsdk::security::Command_RegisterApcToken* Command::release_register_apc_token() {
  // @@protoc_insertion_point(field_release:arsdk.security.Command.register_apc_token)
  if (has_register_apc_token()) {
    clear_has_id();
      ::arsdk::security::Command_RegisterApcToken* temp = id_.register_apc_token_;
    id_.register_apc_token_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::arsdk::security::Command_RegisterApcToken& Command::register_apc_token() const {
  // @@protoc_insertion_point(field_get:arsdk.security.Command.register_apc_token)
  return has_register_apc_token()
      ? *id_.register_apc_token_
      : *reinterpret_cast< ::arsdk::security::Command_RegisterApcToken*>(&::arsdk::security::_Command_RegisterApcToken_default_instance_);
}
inline ::arsdk::security::Command_RegisterApcToken* Command::mutable_register_apc_token() {
  if (!has_register_apc_token()) {
    clear_id();
    set_has_register_apc_token();
    id_.register_apc_token_ = CreateMaybeMessage< ::arsdk::security::Command_RegisterApcToken >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:arsdk.security.Command.register_apc_token)
  return id_.register_apc_token_;
}

// .arsdk.security.Command.RegisterApcDroneList register_apc_drone_list = 17;
inline bool Command::has_register_apc_drone_list() const {
  return id_case() == kRegisterApcDroneList;
}
inline void Command::set_has_register_apc_drone_list() {
  _oneof_case_[0] = kRegisterApcDroneList;
}
inline void Command::clear_register_apc_drone_list() {
  if (has_register_apc_drone_list()) {
    delete id_.register_apc_drone_list_;
    clear_has_id();
  }
}
inline ::arsdk::security::Command_RegisterApcDroneList* Command::release_register_apc_drone_list() {
  // @@protoc_insertion_point(field_release:arsdk.security.Command.register_apc_drone_list)
  if (has_register_apc_drone_list()) {
    clear_has_id();
      ::arsdk::security::Command_RegisterApcDroneList* temp = id_.register_apc_drone_list_;
    id_.register_apc_drone_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::arsdk::security::Command_RegisterApcDroneList& Command::register_apc_drone_list() const {
  // @@protoc_insertion_point(field_get:arsdk.security.Command.register_apc_drone_list)
  return has_register_apc_drone_list()
      ? *id_.register_apc_drone_list_
      : *reinterpret_cast< ::arsdk::security::Command_RegisterApcDroneList*>(&::arsdk::security::_Command_RegisterApcDroneList_default_instance_);
}
inline ::arsdk::security::Command_RegisterApcDroneList* Command::mutable_register_apc_drone_list() {
  if (!has_register_apc_drone_list()) {
    clear_id();
    set_has_register_apc_drone_list();
    id_.register_apc_drone_list_ = CreateMaybeMessage< ::arsdk::security::Command_RegisterApcDroneList >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:arsdk.security.Command.register_apc_drone_list)
  return id_.register_apc_drone_list_;
}

inline bool Command::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void Command::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
inline Command::IdCase Command::id_case() const {
  return Command::IdCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace security
}  // namespace arsdk

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_arsdk_2fsecurity_2eproto
