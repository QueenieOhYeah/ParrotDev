/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: arsdk/privacy.proto */

#ifndef PROTOBUF_C_arsdk_2fprivacy_2eproto__INCLUDED
#define PROTOBUF_C_arsdk_2fprivacy_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "parrot/protobuf/extensions.pb-c.h"

typedef struct _Arsdk__Privacy__Command Arsdk__Privacy__Command;
typedef struct _Arsdk__Privacy__Command__GetState Arsdk__Privacy__Command__GetState;
typedef struct _Arsdk__Privacy__Command__SetLogMode Arsdk__Privacy__Command__SetLogMode;
typedef struct _Arsdk__Privacy__Event Arsdk__Privacy__Event;
typedef struct _Arsdk__Privacy__Event__State Arsdk__Privacy__Event__State;
typedef struct _Arsdk__Privacy__Capabilities Arsdk__Privacy__Capabilities;


/* --- enums --- */

typedef enum _Arsdk__Privacy__LogConfigPersistence {
  /*
   * Persistent configuration. 
   */
  ARSDK__PRIVACY__LOG_CONFIG_PERSISTENCE__LOG_CONFIG_PERSISTENCE_PERSISTENT = 0,
  /*
   * Configuration will only be valid for the current device boot.
   *Configuration will revert to the default factory configuration after the device reboots (and not the previous persistent one). 
   */
  ARSDK__PRIVACY__LOG_CONFIG_PERSISTENCE__LOG_CONFIG_PERSISTENCE_ONESHOT = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARSDK__PRIVACY__LOG_CONFIG_PERSISTENCE)
} Arsdk__Privacy__LogConfigPersistence;
typedef enum _Arsdk__Privacy__LogStorage {
  /*
   * Logs are written to persistent storage. 
   */
  ARSDK__PRIVACY__LOG_STORAGE__LOG_STORAGE_PERSISTENT = 0,
  /*
   * Logs are written to volatile storage, non persistent across reboots.
   *Some logs will be disabled in this mode. 
   */
  ARSDK__PRIVACY__LOG_STORAGE__LOG_STORAGE_VOLATILE = 1,
  /*
   * Logs are not written. 
   */
  ARSDK__PRIVACY__LOG_STORAGE__LOG_STORAGE_NONE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARSDK__PRIVACY__LOG_STORAGE)
} Arsdk__Privacy__LogStorage;

/* --- messages --- */

/*
 * Get Current State.
 *A State event is expected afterwards. 
 */
struct  _Arsdk__Privacy__Command__GetState
{
  ProtobufCMessage base;
  protobuf_c_boolean include_default_capabilities;
};
#define ARSDK__PRIVACY__COMMAND__GET_STATE__INCLUDE_DEFAULT_CAPABILITIES__FIELD_NUMBER 1
#define ARSDK__PRIVACY__COMMAND__GET_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__privacy__command__get_state__descriptor) \
    , 0 }


/*
 * Set log mode.
 *A State event is expected afterwards. 
 */
struct  _Arsdk__Privacy__Command__SetLogMode
{
  ProtobufCMessage base;
  Arsdk__Privacy__LogStorage log_storage;
  Arsdk__Privacy__LogConfigPersistence log_config_persistence;
};
#define ARSDK__PRIVACY__COMMAND__SET_LOG_MODE__LOG_STORAGE__FIELD_NUMBER 1
#define ARSDK__PRIVACY__COMMAND__SET_LOG_MODE__LOG_CONFIG_PERSISTENCE__FIELD_NUMBER 2
#define ARSDK__PRIVACY__COMMAND__SET_LOG_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__privacy__command__set_log_mode__descriptor) \
    , ARSDK__PRIVACY__LOG_STORAGE__LOG_STORAGE_PERSISTENT, ARSDK__PRIVACY__LOG_CONFIG_PERSISTENCE__LOG_CONFIG_PERSISTENCE_PERSISTENT }


typedef enum {
  ARSDK__PRIVACY__COMMAND__ID__NOT_SET = 0,
  ARSDK__PRIVACY__COMMAND__ID_GET_STATE = 16,
  ARSDK__PRIVACY__COMMAND__ID_SET_LOG_MODE = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARSDK__PRIVACY__COMMAND__ID)
} Arsdk__Privacy__Command__IdCase;

struct  _Arsdk__Privacy__Command
{
  ProtobufCMessage base;
  Arsdk__Privacy__Command__IdCase id_case;
  union {
    Arsdk__Privacy__Command__GetState *get_state;
    Arsdk__Privacy__Command__SetLogMode *set_log_mode;
  };
};
#define ARSDK__PRIVACY__COMMAND__GET_STATE__FIELD_NUMBER 16
#define ARSDK__PRIVACY__COMMAND__SET_LOG_MODE__FIELD_NUMBER 17
#define ARSDK__PRIVACY__COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__privacy__command__descriptor) \
    , ARSDK__PRIVACY__COMMAND__ID__NOT_SET, {0} }


/*
 * Sent after GetState or SetLogMode is received, or on changes. 
 */
struct  _Arsdk__Privacy__Event__State
{
  ProtobufCMessage base;
  /*
   * Only present if triggered from a GetState with include_default_capabilities == true. 
   */
  Arsdk__Privacy__Capabilities *default_capabilities;
  Arsdk__Privacy__LogStorage log_storage;
  Arsdk__Privacy__LogConfigPersistence log_config_persistence;
};
#define ARSDK__PRIVACY__EVENT__STATE__DEFAULT_CAPABILITIES__FIELD_NUMBER 1
#define ARSDK__PRIVACY__EVENT__STATE__LOG_STORAGE__FIELD_NUMBER 2
#define ARSDK__PRIVACY__EVENT__STATE__LOG_CONFIG_PERSISTENCE__FIELD_NUMBER 3
#define ARSDK__PRIVACY__EVENT__STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__privacy__event__state__descriptor) \
    , NULL, ARSDK__PRIVACY__LOG_STORAGE__LOG_STORAGE_PERSISTENT, ARSDK__PRIVACY__LOG_CONFIG_PERSISTENCE__LOG_CONFIG_PERSISTENCE_PERSISTENT }


typedef enum {
  ARSDK__PRIVACY__EVENT__ID__NOT_SET = 0,
  ARSDK__PRIVACY__EVENT__ID_STATE = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARSDK__PRIVACY__EVENT__ID)
} Arsdk__Privacy__Event__IdCase;

struct  _Arsdk__Privacy__Event
{
  ProtobufCMessage base;
  Arsdk__Privacy__Event__IdCase id_case;
  union {
    Arsdk__Privacy__Event__State *state;
  };
};
#define ARSDK__PRIVACY__EVENT__STATE__FIELD_NUMBER 16
#define ARSDK__PRIVACY__EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__privacy__event__descriptor) \
    , ARSDK__PRIVACY__EVENT__ID__NOT_SET, {0} }


struct  _Arsdk__Privacy__Capabilities
{
  ProtobufCMessage base;
  size_t n_supported_log_storage;
  Arsdk__Privacy__LogStorage *supported_log_storage;
  size_t n_supported_log_config_persistence;
  Arsdk__Privacy__LogConfigPersistence *supported_log_config_persistence;
};
#define ARSDK__PRIVACY__CAPABILITIES__SUPPORTED_LOG_STORAGE__FIELD_NUMBER 1
#define ARSDK__PRIVACY__CAPABILITIES__SUPPORTED_LOG_CONFIG_PERSISTENCE__FIELD_NUMBER 2
#define ARSDK__PRIVACY__CAPABILITIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arsdk__privacy__capabilities__descriptor) \
    , 0,NULL, 0,NULL }


/* Arsdk__Privacy__Command__GetState methods */
void   arsdk__privacy__command__get_state__init
                     (Arsdk__Privacy__Command__GetState         *message);
/* Arsdk__Privacy__Command__SetLogMode methods */
void   arsdk__privacy__command__set_log_mode__init
                     (Arsdk__Privacy__Command__SetLogMode         *message);
/* Arsdk__Privacy__Command methods */
void   arsdk__privacy__command__init
                     (Arsdk__Privacy__Command         *message);
size_t arsdk__privacy__command__get_packed_size
                     (const Arsdk__Privacy__Command   *message);
size_t arsdk__privacy__command__pack
                     (const Arsdk__Privacy__Command   *message,
                      uint8_t             *out);
size_t arsdk__privacy__command__pack_to_buffer
                     (const Arsdk__Privacy__Command   *message,
                      ProtobufCBuffer     *buffer);
Arsdk__Privacy__Command *
       arsdk__privacy__command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arsdk__privacy__command__free_unpacked
                     (Arsdk__Privacy__Command *message,
                      ProtobufCAllocator *allocator);
/* Arsdk__Privacy__Event__State methods */
void   arsdk__privacy__event__state__init
                     (Arsdk__Privacy__Event__State         *message);
/* Arsdk__Privacy__Event methods */
void   arsdk__privacy__event__init
                     (Arsdk__Privacy__Event         *message);
size_t arsdk__privacy__event__get_packed_size
                     (const Arsdk__Privacy__Event   *message);
size_t arsdk__privacy__event__pack
                     (const Arsdk__Privacy__Event   *message,
                      uint8_t             *out);
size_t arsdk__privacy__event__pack_to_buffer
                     (const Arsdk__Privacy__Event   *message,
                      ProtobufCBuffer     *buffer);
Arsdk__Privacy__Event *
       arsdk__privacy__event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arsdk__privacy__event__free_unpacked
                     (Arsdk__Privacy__Event *message,
                      ProtobufCAllocator *allocator);
/* Arsdk__Privacy__Capabilities methods */
void   arsdk__privacy__capabilities__init
                     (Arsdk__Privacy__Capabilities         *message);
size_t arsdk__privacy__capabilities__get_packed_size
                     (const Arsdk__Privacy__Capabilities   *message);
size_t arsdk__privacy__capabilities__pack
                     (const Arsdk__Privacy__Capabilities   *message,
                      uint8_t             *out);
size_t arsdk__privacy__capabilities__pack_to_buffer
                     (const Arsdk__Privacy__Capabilities   *message,
                      ProtobufCBuffer     *buffer);
Arsdk__Privacy__Capabilities *
       arsdk__privacy__capabilities__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arsdk__privacy__capabilities__free_unpacked
                     (Arsdk__Privacy__Capabilities *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Arsdk__Privacy__Command__GetState_Closure)
                 (const Arsdk__Privacy__Command__GetState *message,
                  void *closure_data);
typedef void (*Arsdk__Privacy__Command__SetLogMode_Closure)
                 (const Arsdk__Privacy__Command__SetLogMode *message,
                  void *closure_data);
typedef void (*Arsdk__Privacy__Command_Closure)
                 (const Arsdk__Privacy__Command *message,
                  void *closure_data);
typedef void (*Arsdk__Privacy__Event__State_Closure)
                 (const Arsdk__Privacy__Event__State *message,
                  void *closure_data);
typedef void (*Arsdk__Privacy__Event_Closure)
                 (const Arsdk__Privacy__Event *message,
                  void *closure_data);
typedef void (*Arsdk__Privacy__Capabilities_Closure)
                 (const Arsdk__Privacy__Capabilities *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    arsdk__privacy__log_config_persistence__descriptor;
extern const ProtobufCEnumDescriptor    arsdk__privacy__log_storage__descriptor;
extern const ProtobufCMessageDescriptor arsdk__privacy__command__descriptor;
extern const ProtobufCMessageDescriptor arsdk__privacy__command__get_state__descriptor;
extern const ProtobufCMessageDescriptor arsdk__privacy__command__set_log_mode__descriptor;
extern const ProtobufCMessageDescriptor arsdk__privacy__event__descriptor;
extern const ProtobufCMessageDescriptor arsdk__privacy__event__state__descriptor;
extern const ProtobufCMessageDescriptor arsdk__privacy__capabilities__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_arsdk_2fprivacy_2eproto__INCLUDED */
