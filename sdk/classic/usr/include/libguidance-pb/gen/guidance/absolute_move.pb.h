// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guidance/absolute_move.proto

#ifndef PROTOBUF_INCLUDED_guidance_2fabsolute_5fmove_2eproto
#define PROTOBUF_INCLUDED_guidance_2fabsolute_5fmove_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_guidance_2fabsolute_5fmove_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_guidance_2fabsolute_5fmove_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_guidance_2fabsolute_5fmove_2eproto();
namespace Guidance {
namespace AbsoluteMove {
namespace Messages {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class Config;
class ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class Destination;
class DestinationDefaultTypeInternal;
extern DestinationDefaultTypeInternal _Destination_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class Vector3f;
class Vector3fDefaultTypeInternal;
extern Vector3fDefaultTypeInternal _Vector3f_default_instance_;
}  // namespace Messages
}  // namespace AbsoluteMove
}  // namespace Guidance
namespace google {
namespace protobuf {
template<> ::Guidance::AbsoluteMove::Messages::Command* Arena::CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Command>(Arena*);
template<> ::Guidance::AbsoluteMove::Messages::Config* Arena::CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Config>(Arena*);
template<> ::Guidance::AbsoluteMove::Messages::Destination* Arena::CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Destination>(Arena*);
template<> ::Guidance::AbsoluteMove::Messages::Event* Arena::CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Event>(Arena*);
template<> ::Guidance::AbsoluteMove::Messages::Vector3f* Arena::CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Vector3f>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Guidance {
namespace AbsoluteMove {
namespace Messages {

enum YawType {
  NONE = 0,
  TARGET = 1,
  CUSTOM = 2,
  YawType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  YawType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool YawType_IsValid(int value);
const YawType YawType_MIN = NONE;
const YawType YawType_MAX = CUSTOM;
const int YawType_ARRAYSIZE = YawType_MAX + 1;

const ::google::protobuf::EnumDescriptor* YawType_descriptor();
inline const ::std::string& YawType_Name(YawType value) {
  return ::google::protobuf::internal::NameOfEnum(
    YawType_descriptor(), value);
}
inline bool YawType_Parse(
    const ::std::string& name, YawType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<YawType>(
    YawType_descriptor(), name, value);
}
// ===================================================================

class Vector3f :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Guidance.AbsoluteMove.Messages.Vector3f) */ {
 public:
  Vector3f();
  virtual ~Vector3f();

  Vector3f(const Vector3f& from);

  inline Vector3f& operator=(const Vector3f& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3f(Vector3f&& from) noexcept
    : Vector3f() {
    *this = ::std::move(from);
  }

  inline Vector3f& operator=(Vector3f&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Vector3f& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector3f* internal_default_instance() {
    return reinterpret_cast<const Vector3f*>(
               &_Vector3f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Vector3f* other);
  friend void swap(Vector3f& a, Vector3f& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3f* New() const final {
    return CreateMaybeMessage<Vector3f>(nullptr);
  }

  Vector3f* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vector3f>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vector3f& from);
  void MergeFrom(const Vector3f& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3f* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Guidance.AbsoluteMove.Messages.Vector3f)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guidance_2fabsolute_5fmove_2eproto;
};
// -------------------------------------------------------------------

class Destination :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Guidance.AbsoluteMove.Messages.Destination) */ {
 public:
  Destination();
  virtual ~Destination();

  Destination(const Destination& from);

  inline Destination& operator=(const Destination& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Destination(Destination&& from) noexcept
    : Destination() {
    *this = ::std::move(from);
  }

  inline Destination& operator=(Destination&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Destination& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Destination* internal_default_instance() {
    return reinterpret_cast<const Destination*>(
               &_Destination_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Destination* other);
  friend void swap(Destination& a, Destination& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Destination* New() const final {
    return CreateMaybeMessage<Destination>(nullptr);
  }

  Destination* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Destination>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Destination& from);
  void MergeFrom(const Destination& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Destination* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Guidance.AbsoluteMove.Messages.Vector3f position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::Guidance::AbsoluteMove::Messages::Vector3f& position() const;
  ::Guidance::AbsoluteMove::Messages::Vector3f* release_position();
  ::Guidance::AbsoluteMove::Messages::Vector3f* mutable_position();
  void set_allocated_position(::Guidance::AbsoluteMove::Messages::Vector3f* position);

  // .Guidance.AbsoluteMove.Messages.Vector3f velocity = 2;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 2;
  const ::Guidance::AbsoluteMove::Messages::Vector3f& velocity() const;
  ::Guidance::AbsoluteMove::Messages::Vector3f* release_velocity();
  ::Guidance::AbsoluteMove::Messages::Vector3f* mutable_velocity();
  void set_allocated_velocity(::Guidance::AbsoluteMove::Messages::Vector3f* velocity);

  // float yaw = 3;
  void clear_yaw();
  static const int kYawFieldNumber = 3;
  float yaw() const;
  void set_yaw(float value);

  // float yaw_rate = 4;
  void clear_yaw_rate();
  static const int kYawRateFieldNumber = 4;
  float yaw_rate() const;
  void set_yaw_rate(float value);

  // .Guidance.AbsoluteMove.Messages.YawType yaw_type = 5;
  void clear_yaw_type();
  static const int kYawTypeFieldNumber = 5;
  ::Guidance::AbsoluteMove::Messages::YawType yaw_type() const;
  void set_yaw_type(::Guidance::AbsoluteMove::Messages::YawType value);

  // float max_horizontal_speed = 6;
  void clear_max_horizontal_speed();
  static const int kMaxHorizontalSpeedFieldNumber = 6;
  float max_horizontal_speed() const;
  void set_max_horizontal_speed(float value);

  // float max_vertical_speed = 7;
  void clear_max_vertical_speed();
  static const int kMaxVerticalSpeedFieldNumber = 7;
  float max_vertical_speed() const;
  void set_max_vertical_speed(float value);

  // float max_yaw_rate = 8;
  void clear_max_yaw_rate();
  static const int kMaxYawRateFieldNumber = 8;
  float max_yaw_rate() const;
  void set_max_yaw_rate(float value);

  // @@protoc_insertion_point(class_scope:Guidance.AbsoluteMove.Messages.Destination)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Guidance::AbsoluteMove::Messages::Vector3f* position_;
  ::Guidance::AbsoluteMove::Messages::Vector3f* velocity_;
  float yaw_;
  float yaw_rate_;
  int yaw_type_;
  float max_horizontal_speed_;
  float max_vertical_speed_;
  float max_yaw_rate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guidance_2fabsolute_5fmove_2eproto;
};
// -------------------------------------------------------------------

class Config :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Guidance.AbsoluteMove.Messages.Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Config* other);
  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Config* New() const final {
    return CreateMaybeMessage<Config>(nullptr);
  }

  Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Guidance.AbsoluteMove.Messages.Destination destination = 1;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 1;
  const ::Guidance::AbsoluteMove::Messages::Destination& destination() const;
  ::Guidance::AbsoluteMove::Messages::Destination* release_destination();
  ::Guidance::AbsoluteMove::Messages::Destination* mutable_destination();
  void set_allocated_destination(::Guidance::AbsoluteMove::Messages::Destination* destination);

  // float validation_radius = 2;
  void clear_validation_radius();
  static const int kValidationRadiusFieldNumber = 2;
  float validation_radius() const;
  void set_validation_radius(float value);

  // @@protoc_insertion_point(class_scope:Guidance.AbsoluteMove.Messages.Config)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Guidance::AbsoluteMove::Messages::Destination* destination_;
  float validation_radius_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guidance_2fabsolute_5fmove_2eproto;
};
// -------------------------------------------------------------------

class Command :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Guidance.AbsoluteMove.Messages.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Command& default_instance();

  enum IdCase {
    kSetNewDestination = 1,
    ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(nullptr);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Guidance.AbsoluteMove.Messages.Destination set_new_destination = 1;
  bool has_set_new_destination() const;
  void clear_set_new_destination();
  static const int kSetNewDestinationFieldNumber = 1;
  const ::Guidance::AbsoluteMove::Messages::Destination& set_new_destination() const;
  ::Guidance::AbsoluteMove::Messages::Destination* release_set_new_destination();
  ::Guidance::AbsoluteMove::Messages::Destination* mutable_set_new_destination();
  void set_allocated_set_new_destination(::Guidance::AbsoluteMove::Messages::Destination* set_new_destination);

  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:Guidance.AbsoluteMove.Messages.Command)
 private:
  class HasBitSetters;
  void set_has_set_new_destination();

  inline bool has_id() const;
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union IdUnion {
    IdUnion() {}
    ::Guidance::AbsoluteMove::Messages::Destination* set_new_destination_;
  } id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_guidance_2fabsolute_5fmove_2eproto;
};
// -------------------------------------------------------------------

class Event :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Guidance.AbsoluteMove.Messages.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Event& default_instance();

  enum IdCase {
    kDone = 1,
    ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Event* other);
  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const final {
    return CreateMaybeMessage<Event>(nullptr);
  }

  Event* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Event>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Empty done = 1;
  bool has_done() const;
  void clear_done();
  static const int kDoneFieldNumber = 1;
  const ::google::protobuf::Empty& done() const;
  ::google::protobuf::Empty* release_done();
  ::google::protobuf::Empty* mutable_done();
  void set_allocated_done(::google::protobuf::Empty* done);

  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:Guidance.AbsoluteMove.Messages.Event)
 private:
  class HasBitSetters;
  void set_has_done();

  inline bool has_id() const;
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union IdUnion {
    IdUnion() {}
    ::google::protobuf::Empty* done_;
  } id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_guidance_2fabsolute_5fmove_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Vector3f

// float x = 1;
inline void Vector3f::clear_x() {
  x_ = 0;
}
inline float Vector3f::x() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Vector3f.x)
  return x_;
}
inline void Vector3f::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Vector3f.x)
}

// float y = 2;
inline void Vector3f::clear_y() {
  y_ = 0;
}
inline float Vector3f::y() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Vector3f.y)
  return y_;
}
inline void Vector3f::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Vector3f.y)
}

// float z = 3;
inline void Vector3f::clear_z() {
  z_ = 0;
}
inline float Vector3f::z() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Vector3f.z)
  return z_;
}
inline void Vector3f::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Vector3f.z)
}

// -------------------------------------------------------------------

// Destination

// .Guidance.AbsoluteMove.Messages.Vector3f position = 1;
inline bool Destination::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline void Destination::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::Guidance::AbsoluteMove::Messages::Vector3f& Destination::position() const {
  const ::Guidance::AbsoluteMove::Messages::Vector3f* p = position_;
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::Guidance::AbsoluteMove::Messages::Vector3f*>(
      &::Guidance::AbsoluteMove::Messages::_Vector3f_default_instance_);
}
inline ::Guidance::AbsoluteMove::Messages::Vector3f* Destination::release_position() {
  // @@protoc_insertion_point(field_release:Guidance.AbsoluteMove.Messages.Destination.position)
  
  ::Guidance::AbsoluteMove::Messages::Vector3f* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::Guidance::AbsoluteMove::Messages::Vector3f* Destination::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Vector3f>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Guidance.AbsoluteMove.Messages.Destination.position)
  return position_;
}
inline void Destination::set_allocated_position(::Guidance::AbsoluteMove::Messages::Vector3f* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:Guidance.AbsoluteMove.Messages.Destination.position)
}

// .Guidance.AbsoluteMove.Messages.Vector3f velocity = 2;
inline bool Destination::has_velocity() const {
  return this != internal_default_instance() && velocity_ != nullptr;
}
inline void Destination::clear_velocity() {
  if (GetArenaNoVirtual() == nullptr && velocity_ != nullptr) {
    delete velocity_;
  }
  velocity_ = nullptr;
}
inline const ::Guidance::AbsoluteMove::Messages::Vector3f& Destination::velocity() const {
  const ::Guidance::AbsoluteMove::Messages::Vector3f* p = velocity_;
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.velocity)
  return p != nullptr ? *p : *reinterpret_cast<const ::Guidance::AbsoluteMove::Messages::Vector3f*>(
      &::Guidance::AbsoluteMove::Messages::_Vector3f_default_instance_);
}
inline ::Guidance::AbsoluteMove::Messages::Vector3f* Destination::release_velocity() {
  // @@protoc_insertion_point(field_release:Guidance.AbsoluteMove.Messages.Destination.velocity)
  
  ::Guidance::AbsoluteMove::Messages::Vector3f* temp = velocity_;
  velocity_ = nullptr;
  return temp;
}
inline ::Guidance::AbsoluteMove::Messages::Vector3f* Destination::mutable_velocity() {
  
  if (velocity_ == nullptr) {
    auto* p = CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Vector3f>(GetArenaNoVirtual());
    velocity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Guidance.AbsoluteMove.Messages.Destination.velocity)
  return velocity_;
}
inline void Destination::set_allocated_velocity(::Guidance::AbsoluteMove::Messages::Vector3f* velocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete velocity_;
  }
  if (velocity) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      velocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, velocity, submessage_arena);
    }
    
  } else {
    
  }
  velocity_ = velocity;
  // @@protoc_insertion_point(field_set_allocated:Guidance.AbsoluteMove.Messages.Destination.velocity)
}

// float yaw = 3;
inline void Destination::clear_yaw() {
  yaw_ = 0;
}
inline float Destination::yaw() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.yaw)
  return yaw_;
}
inline void Destination::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Destination.yaw)
}

// float yaw_rate = 4;
inline void Destination::clear_yaw_rate() {
  yaw_rate_ = 0;
}
inline float Destination::yaw_rate() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.yaw_rate)
  return yaw_rate_;
}
inline void Destination::set_yaw_rate(float value) {
  
  yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Destination.yaw_rate)
}

// .Guidance.AbsoluteMove.Messages.YawType yaw_type = 5;
inline void Destination::clear_yaw_type() {
  yaw_type_ = 0;
}
inline ::Guidance::AbsoluteMove::Messages::YawType Destination::yaw_type() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.yaw_type)
  return static_cast< ::Guidance::AbsoluteMove::Messages::YawType >(yaw_type_);
}
inline void Destination::set_yaw_type(::Guidance::AbsoluteMove::Messages::YawType value) {
  
  yaw_type_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Destination.yaw_type)
}

// float max_horizontal_speed = 6;
inline void Destination::clear_max_horizontal_speed() {
  max_horizontal_speed_ = 0;
}
inline float Destination::max_horizontal_speed() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.max_horizontal_speed)
  return max_horizontal_speed_;
}
inline void Destination::set_max_horizontal_speed(float value) {
  
  max_horizontal_speed_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Destination.max_horizontal_speed)
}

// float max_vertical_speed = 7;
inline void Destination::clear_max_vertical_speed() {
  max_vertical_speed_ = 0;
}
inline float Destination::max_vertical_speed() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.max_vertical_speed)
  return max_vertical_speed_;
}
inline void Destination::set_max_vertical_speed(float value) {
  
  max_vertical_speed_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Destination.max_vertical_speed)
}

// float max_yaw_rate = 8;
inline void Destination::clear_max_yaw_rate() {
  max_yaw_rate_ = 0;
}
inline float Destination::max_yaw_rate() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Destination.max_yaw_rate)
  return max_yaw_rate_;
}
inline void Destination::set_max_yaw_rate(float value) {
  
  max_yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Destination.max_yaw_rate)
}

// -------------------------------------------------------------------

// Config

// .Guidance.AbsoluteMove.Messages.Destination destination = 1;
inline bool Config::has_destination() const {
  return this != internal_default_instance() && destination_ != nullptr;
}
inline void Config::clear_destination() {
  if (GetArenaNoVirtual() == nullptr && destination_ != nullptr) {
    delete destination_;
  }
  destination_ = nullptr;
}
inline const ::Guidance::AbsoluteMove::Messages::Destination& Config::destination() const {
  const ::Guidance::AbsoluteMove::Messages::Destination* p = destination_;
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Config.destination)
  return p != nullptr ? *p : *reinterpret_cast<const ::Guidance::AbsoluteMove::Messages::Destination*>(
      &::Guidance::AbsoluteMove::Messages::_Destination_default_instance_);
}
inline ::Guidance::AbsoluteMove::Messages::Destination* Config::release_destination() {
  // @@protoc_insertion_point(field_release:Guidance.AbsoluteMove.Messages.Config.destination)
  
  ::Guidance::AbsoluteMove::Messages::Destination* temp = destination_;
  destination_ = nullptr;
  return temp;
}
inline ::Guidance::AbsoluteMove::Messages::Destination* Config::mutable_destination() {
  
  if (destination_ == nullptr) {
    auto* p = CreateMaybeMessage<::Guidance::AbsoluteMove::Messages::Destination>(GetArenaNoVirtual());
    destination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Guidance.AbsoluteMove.Messages.Config.destination)
  return destination_;
}
inline void Config::set_allocated_destination(::Guidance::AbsoluteMove::Messages::Destination* destination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete destination_;
  }
  if (destination) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      destination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, destination, submessage_arena);
    }
    
  } else {
    
  }
  destination_ = destination;
  // @@protoc_insertion_point(field_set_allocated:Guidance.AbsoluteMove.Messages.Config.destination)
}

// float validation_radius = 2;
inline void Config::clear_validation_radius() {
  validation_radius_ = 0;
}
inline float Config::validation_radius() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Config.validation_radius)
  return validation_radius_;
}
inline void Config::set_validation_radius(float value) {
  
  validation_radius_ = value;
  // @@protoc_insertion_point(field_set:Guidance.AbsoluteMove.Messages.Config.validation_radius)
}

// -------------------------------------------------------------------

// Command

// .Guidance.AbsoluteMove.Messages.Destination set_new_destination = 1;
inline bool Command::has_set_new_destination() const {
  return id_case() == kSetNewDestination;
}
inline void Command::set_has_set_new_destination() {
  _oneof_case_[0] = kSetNewDestination;
}
inline void Command::clear_set_new_destination() {
  if (has_set_new_destination()) {
    delete id_.set_new_destination_;
    clear_has_id();
  }
}
inline ::Guidance::AbsoluteMove::Messages::Destination* Command::release_set_new_destination() {
  // @@protoc_insertion_point(field_release:Guidance.AbsoluteMove.Messages.Command.set_new_destination)
  if (has_set_new_destination()) {
    clear_has_id();
      ::Guidance::AbsoluteMove::Messages::Destination* temp = id_.set_new_destination_;
    id_.set_new_destination_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Guidance::AbsoluteMove::Messages::Destination& Command::set_new_destination() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Command.set_new_destination)
  return has_set_new_destination()
      ? *id_.set_new_destination_
      : *reinterpret_cast< ::Guidance::AbsoluteMove::Messages::Destination*>(&::Guidance::AbsoluteMove::Messages::_Destination_default_instance_);
}
inline ::Guidance::AbsoluteMove::Messages::Destination* Command::mutable_set_new_destination() {
  if (!has_set_new_destination()) {
    clear_id();
    set_has_set_new_destination();
    id_.set_new_destination_ = CreateMaybeMessage< ::Guidance::AbsoluteMove::Messages::Destination >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:Guidance.AbsoluteMove.Messages.Command.set_new_destination)
  return id_.set_new_destination_;
}

inline bool Command::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void Command::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
inline Command::IdCase Command::id_case() const {
  return Command::IdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Event

// .google.protobuf.Empty done = 1;
inline bool Event::has_done() const {
  return id_case() == kDone;
}
inline void Event::set_has_done() {
  _oneof_case_[0] = kDone;
}
inline ::google::protobuf::Empty* Event::release_done() {
  // @@protoc_insertion_point(field_release:Guidance.AbsoluteMove.Messages.Event.done)
  if (has_done()) {
    clear_has_id();
      ::google::protobuf::Empty* temp = id_.done_;
    id_.done_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Empty& Event::done() const {
  // @@protoc_insertion_point(field_get:Guidance.AbsoluteMove.Messages.Event.done)
  return has_done()
      ? *id_.done_
      : *reinterpret_cast< ::google::protobuf::Empty*>(&::google::protobuf::_Empty_default_instance_);
}
inline ::google::protobuf::Empty* Event::mutable_done() {
  if (!has_done()) {
    clear_id();
    set_has_done();
    id_.done_ = CreateMaybeMessage< ::google::protobuf::Empty >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:Guidance.AbsoluteMove.Messages.Event.done)
  return id_.done_;
}

inline bool Event::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void Event::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
inline Event::IdCase Event::id_case() const {
  return Event::IdCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace AbsoluteMove
}  // namespace Guidance

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Guidance::AbsoluteMove::Messages::YawType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Guidance::AbsoluteMove::Messages::YawType>() {
  return ::Guidance::AbsoluteMove::Messages::YawType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_guidance_2fabsolute_5fmove_2eproto
