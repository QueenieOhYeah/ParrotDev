// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guidance/poi.proto

#ifndef PROTOBUF_INCLUDED_guidance_2fpoi_2eproto
#define PROTOBUF_INCLUDED_guidance_2fpoi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_guidance_2fpoi_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_guidance_2fpoi_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_guidance_2fpoi_2eproto();
namespace Guidance {
namespace Poi {
namespace Messages {
class Config;
class ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
}  // namespace Messages
}  // namespace Poi
}  // namespace Guidance
namespace google {
namespace protobuf {
template<> ::Guidance::Poi::Messages::Config* Arena::CreateMaybeMessage<::Guidance::Poi::Messages::Config>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Guidance {
namespace Poi {
namespace Messages {

enum Type {
  TYPE_FREE = 0,
  TYPE_LOCKED = 1,
  TYPE_LOCK_ONCE = 2,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Type_IsValid(int value);
const Type Type_MIN = TYPE_FREE;
const Type Type_MAX = TYPE_LOCK_ONCE;
const int Type_ARRAYSIZE = Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_descriptor();
inline const ::std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_descriptor(), value);
}
inline bool Type_Parse(
    const ::std::string& name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
    Type_descriptor(), name, value);
}
// ===================================================================

class Config :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Guidance.Poi.Messages.Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Config* other);
  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Config* New() const final {
    return CreateMaybeMessage<Config>(nullptr);
  }

  Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Guidance.Poi.Messages.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::Guidance::Poi::Messages::Type type() const;
  void set_type(::Guidance::Poi::Messages::Type value);

  // float latitude = 2;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  float latitude() const;
  void set_latitude(float value);

  // float longitude = 3;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:Guidance.Poi.Messages.Config)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  float latitude_;
  float longitude_;
  float altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guidance_2fpoi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Config

// .Guidance.Poi.Messages.Type type = 1;
inline void Config::clear_type() {
  type_ = 0;
}
inline ::Guidance::Poi::Messages::Type Config::type() const {
  // @@protoc_insertion_point(field_get:Guidance.Poi.Messages.Config.type)
  return static_cast< ::Guidance::Poi::Messages::Type >(type_);
}
inline void Config::set_type(::Guidance::Poi::Messages::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Guidance.Poi.Messages.Config.type)
}

// float latitude = 2;
inline void Config::clear_latitude() {
  latitude_ = 0;
}
inline float Config::latitude() const {
  // @@protoc_insertion_point(field_get:Guidance.Poi.Messages.Config.latitude)
  return latitude_;
}
inline void Config::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:Guidance.Poi.Messages.Config.latitude)
}

// float longitude = 3;
inline void Config::clear_longitude() {
  longitude_ = 0;
}
inline float Config::longitude() const {
  // @@protoc_insertion_point(field_get:Guidance.Poi.Messages.Config.longitude)
  return longitude_;
}
inline void Config::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:Guidance.Poi.Messages.Config.longitude)
}

// float altitude = 4;
inline void Config::clear_altitude() {
  altitude_ = 0;
}
inline float Config::altitude() const {
  // @@protoc_insertion_point(field_get:Guidance.Poi.Messages.Config.altitude)
  return altitude_;
}
inline void Config::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:Guidance.Poi.Messages.Config.altitude)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Poi
}  // namespace Guidance

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Guidance::Poi::Messages::Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Guidance::Poi::Messages::Type>() {
  return ::Guidance::Poi::Messages::Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_guidance_2fpoi_2eproto
